/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, EggBatch as PrismaEggBatch } from "@prisma/client";

export class EggBatchServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.EggBatchCountArgs, "select">): Promise<number> {
    return this.prisma.eggBatch.count(args);
  }

  async eggBatches<T extends Prisma.EggBatchFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.EggBatchFindManyArgs>
  ): Promise<PrismaEggBatch[]> {
    return this.prisma.eggBatch.findMany<Prisma.EggBatchFindManyArgs>(args);
  }
  async eggBatch<T extends Prisma.EggBatchFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.EggBatchFindUniqueArgs>
  ): Promise<PrismaEggBatch | null> {
    return this.prisma.eggBatch.findUnique(args);
  }
  async createEggBatch<T extends Prisma.EggBatchCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.EggBatchCreateArgs>
  ): Promise<PrismaEggBatch> {
    return this.prisma.eggBatch.create<T>(args);
  }
  async updateEggBatch<T extends Prisma.EggBatchUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.EggBatchUpdateArgs>
  ): Promise<PrismaEggBatch> {
    return this.prisma.eggBatch.update<T>(args);
  }
  async deleteEggBatch<T extends Prisma.EggBatchDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.EggBatchDeleteArgs>
  ): Promise<PrismaEggBatch> {
    return this.prisma.eggBatch.delete(args);
  }
}
