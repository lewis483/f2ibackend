/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, UsageGuideline as PrismaUsageGuideline } from "@prisma/client";

export class UsageGuidelineServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.UsageGuidelineCountArgs, "select">
  ): Promise<number> {
    return this.prisma.usageGuideline.count(args);
  }

  async usageGuidelines<T extends Prisma.UsageGuidelineFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.UsageGuidelineFindManyArgs>
  ): Promise<PrismaUsageGuideline[]> {
    return this.prisma.usageGuideline.findMany<Prisma.UsageGuidelineFindManyArgs>(
      args
    );
  }
  async usageGuideline<T extends Prisma.UsageGuidelineFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.UsageGuidelineFindUniqueArgs>
  ): Promise<PrismaUsageGuideline | null> {
    return this.prisma.usageGuideline.findUnique(args);
  }
  async createUsageGuideline<T extends Prisma.UsageGuidelineCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.UsageGuidelineCreateArgs>
  ): Promise<PrismaUsageGuideline> {
    return this.prisma.usageGuideline.create<T>(args);
  }
  async updateUsageGuideline<T extends Prisma.UsageGuidelineUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.UsageGuidelineUpdateArgs>
  ): Promise<PrismaUsageGuideline> {
    return this.prisma.usageGuideline.update<T>(args);
  }
  async deleteUsageGuideline<T extends Prisma.UsageGuidelineDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.UsageGuidelineDeleteArgs>
  ): Promise<PrismaUsageGuideline> {
    return this.prisma.usageGuideline.delete(args);
  }
}
