/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Poultry as PrismaPoultry } from "@prisma/client";

export class PoultryServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.PoultryCountArgs, "select">): Promise<number> {
    return this.prisma.poultry.count(args);
  }

  async poultries<T extends Prisma.PoultryFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.PoultryFindManyArgs>
  ): Promise<PrismaPoultry[]> {
    return this.prisma.poultry.findMany<Prisma.PoultryFindManyArgs>(args);
  }
  async poultry<T extends Prisma.PoultryFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.PoultryFindUniqueArgs>
  ): Promise<PrismaPoultry | null> {
    return this.prisma.poultry.findUnique(args);
  }
  async createPoultry<T extends Prisma.PoultryCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.PoultryCreateArgs>
  ): Promise<PrismaPoultry> {
    return this.prisma.poultry.create<T>(args);
  }
  async updatePoultry<T extends Prisma.PoultryUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.PoultryUpdateArgs>
  ): Promise<PrismaPoultry> {
    return this.prisma.poultry.update<T>(args);
  }
  async deletePoultry<T extends Prisma.PoultryDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.PoultryDeleteArgs>
  ): Promise<PrismaPoultry> {
    return this.prisma.poultry.delete(args);
  }
}
